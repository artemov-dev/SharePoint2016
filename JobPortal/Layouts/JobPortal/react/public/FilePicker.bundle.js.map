{"version":3,"sources":["webpack:///./src/FilePicker.tsx","webpack:///./src/LoadTheme.js","webpack:///./src/ArtDevServices.js"],"names":["FilePicker","theme","getTheme","palette","fonts","classNames","mergeStyleSets","listGridExample","overflow","fontSize","position","listGridExampleTile","textAlign","outline","float","background","neutralLighter","selectors","content","left","right","top","bottom","boxSizing","border","white","listGridExampleSizer","paddingBottom","listGridExamplePadder","listGridExampleLabel","color","padding","width","small","listGridExampleImage","columnCount","React","useRef","rowHeight","getItemCountForPage","useCallback","itemIndex","surfaceRect","current","Math","ceil","floor","onRenderCell","item","index","className","style","src","FileRef","getPageHeight","useState","key","setkey","items","setitems","useEffect","ExecuteOrDelayUntilScriptLoaded","SPServices","getJsomListItems","then","data","console","log","Stack","horizontal","tokens","childrenGap","Item","grow","shrink","styles","root","paddingTop","borderRight","Nav","linkText","groups","links","name","url","icon","onLinkClick","e","preventDefault","parent","target","parentNode","href","getAttribute","getElementsByTagName","valueOf","selectedKey","Text","variant","FocusZone","List","loadTheme","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","black","initializeIcons","disableWarnings","priv","lastStatusId","undefined","getWebUrl","_spPageContextInfo","webServerRelativeUrl","checkAttachments","context","enumerator","Promise","resolve","Attachments","attachmentFiles","get_current","get_attachmentFiles","reject","load","executeQueryAsync","attachmentsItemsEnumerator","getEnumerator","moveNext","attachItem","AttachmentFiles","push","FileName","get_fileName","ServerRelativeUrl","get_serverRelativeUrl","sender","error","get_message","get_stackTrace","getAttachments","getLink","link","linkUrl","Url","search","split","getSiteUrl","siteServerRelativeUrl","getStringParamsFromObject","paramsObject","Object","keys","map","k","encodeURI","join","getWebApiUrlList","listUrl","webUrl","isImage","fileName","test","getUrlParameterByName","window","location","replace","results","RegExp","exec","decodeURIComponent","getListItemById","itemId","createListItem","deferred","jQuery","Deferred","fetch","method","headers","val","body","JSON","stringify","response","json","d","promise","deleteListItem","updateListItem","listTitle","camlQuery","params","pagingInfo","SP","ClientContext","list","get_web","get_lists","getByTitle","query","CamlQuery","set_viewXml","ListItemCollectionPosition","set_pagingInfo","set_listItemCollectionPosition","listItems","getItems","promises","get_fieldValues","extend","all","isUserInGroups","userGroups","indexOf","Title","addNotification","text","fixed","UI","Notify","Status","removeStatus","getTarget","getHashTagLink","hashTagId","hslToRgb","h","s","l","r","g","b","hue2rgb","p","q","t","setCookie","szName","szValue","uDaysExpires","szPath","szExpireDate","dtExpires","Date","setTime","getTime","toGMTString","document","cookie","getCookie","matches","match","getSetting","callback","SOD","executeFunc","filter","length","SettingsValue","isInEditMode","inDesignMode","forms","MSOWebPartPageFormName","MSOLayout_InDesignMode","value","wikiInEditMode","_wikiPageMode","OpenModalDialog","strPageURL","height","dialogOptions","$create_DialogOptions","ModalDialog","showModalDialog"],"mappings":"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","file":"FilePicker.bundle.js","sourcesContent":["import * as React from 'react'\r\nimport * as ReactDOM from 'react-dom'\r\nimport { Stack, INavStyles, INavLinkGroup, Nav, Text, IStackStyles, getTheme, List, ITheme, mergeStyleSets, IRectangle, FocusZone } from 'office-ui-fabric-react'\r\nimport './LoadTheme'\r\nimport { SPServices } from './ArtDevServices'\r\n\r\ninterface IItem {\r\n    ID: string,\r\n    FileRef: string,\r\n    File_x0020_Type: string\r\n}\r\n\r\n\r\nexport const FilePicker = () => {\r\n\r\n\r\n    const theme: ITheme = getTheme();\r\n    const { palette, fonts } = theme;\r\n    const ROWS_PER_PAGE = 3;\r\n    const MAX_ROW_HEIGHT = 250;\r\n    const classNames = mergeStyleSets({\r\n        listGridExample: {\r\n            overflow: 'hidden',\r\n            fontSize: 0,\r\n            position: 'relative',\r\n        },\r\n        listGridExampleTile: {\r\n            textAlign: 'center',\r\n            outline: 'none',\r\n            position: 'relative',\r\n            float: 'left',\r\n            background: palette.neutralLighter,\r\n            selectors: {\r\n                'focus:after': {\r\n                    content: '',\r\n                    position: 'absolute',\r\n                    left: 2,\r\n                    right: 2,\r\n                    top: 2,\r\n                    bottom: 2,\r\n                    boxSizing: 'border-box',\r\n                    border: `1px solid ${palette.white}`,\r\n                },\r\n            },\r\n        },\r\n        listGridExampleSizer: {\r\n            paddingBottom: '100%',\r\n        },\r\n        listGridExamplePadder: {\r\n            position: 'absolute',\r\n            left: 2,\r\n            top: 2,\r\n            right: 2,\r\n            bottom: 2,\r\n        },\r\n        listGridExampleLabel: {\r\n            background: 'rgba(0, 0, 0, 0.3)',\r\n            color: '#FFFFFF',\r\n            position: 'absolute',\r\n            padding: 10,\r\n            bottom: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            fontSize: fonts.small.fontSize,\r\n            boxSizing: 'border-box',\r\n        },\r\n        listGridExampleImage: {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n        },\r\n    });\r\n\r\n\r\n    const columnCount = React.useRef(0);\r\n    const rowHeight = React.useRef(0);\r\n\r\n    const getItemCountForPage = React.useCallback((itemIndex: number, surfaceRect: IRectangle) => {\r\n        if (itemIndex === 0) {\r\n            columnCount.current = Math.ceil(surfaceRect.width / MAX_ROW_HEIGHT);\r\n            rowHeight.current = Math.floor(surfaceRect.width / columnCount.current);\r\n        }\r\n        return columnCount.current * ROWS_PER_PAGE;\r\n    }, []);\r\n\r\n    const onRenderCell = React.useCallback((item: IItem, index: number | undefined) => {\r\n        return (\r\n            <div\r\n                className={classNames.listGridExampleTile}\r\n                data-is-focusable\r\n                style={{\r\n                    width: 100 / columnCount.current + '%',\r\n                }}\r\n            >\r\n                <div className={classNames.listGridExampleSizer}>\r\n                    <div className={classNames.listGridExamplePadder}>\r\n                        <img src={item.FileRef} className={classNames.listGridExampleImage} />\r\n                        <span className={classNames.listGridExampleLabel}>{`item ${index}`}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }, []);\r\n\r\n    const getPageHeight = React.useCallback((): number => {\r\n        return rowHeight.current * ROWS_PER_PAGE;\r\n    }, []);\r\n\r\n\r\n    const navStyles: Partial<INavStyles> = {\r\n        root: {\r\n            overflow: 'hidden'\r\n        },\r\n        linkText: {\r\n            color: '#666666'\r\n        }\r\n    };\r\n\r\n    const stackNavStyles: Partial<IStackStyles> = {\r\n        root: {\r\n            paddingTop: 20,\r\n            borderRight: '1px solid #ff9900',\r\n            width: 0,\r\n            overflow: 'hidden'\r\n        }\r\n    }\r\n\r\n    const navLinkGroups: INavLinkGroup[] = [\r\n        {\r\n            links: [\r\n                {\r\n                    name: 'SharePoint',\r\n                    url: 'key1',\r\n                    icon: 'SharepointAppIcon16',\r\n                    key: 'key1'\r\n\r\n                },\r\n                {\r\n                    name: 'Upload',\r\n                    url: 'key2',\r\n                    icon: 'Upload',\r\n                    key: 'key2'\r\n\r\n                }\r\n            ],\r\n        },\r\n    ];\r\n\r\n\r\n    const _onClickHandler = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n        e.preventDefault()\r\n        const parent: HTMLElement = ((e.target as HTMLElement).parentNode as HTMLElement).parentNode as HTMLElement\r\n        const href: string | undefined = parent.getAttribute('href') == null ? parent.getElementsByTagName('a')[0].getAttribute('href')?.valueOf() : parent.getAttribute('href')?.valueOf()\r\n        setkey(href)\r\n\r\n    }\r\n\r\n    const [key, setkey] = React.useState<string | undefined>(\"key1\")\r\n    const [items, setitems] = React.useState([])\r\n    React.useEffect(() => {\r\n        ExecuteOrDelayUntilScriptLoaded(() => {\r\n            SPServices.getJsomListItems(\"\", \"Site Assets\",\r\n                \"<View Scope='RecursiveAll'>\" +\r\n                \"<Query>\" +\r\n                \"<Where>\" +\r\n                \"<Eq>\" +\r\n                \"<FieldRef Name=\\\"FileDirRef\\\" />\" +\r\n                \"<Value Type=\\\"Text\\\">/SiteAssets/logo</Value>\" +\r\n                \"</Eq>\" +\r\n                \"</Where>\" +\r\n                \"</Query>\" +\r\n                \"</View>\")\r\n                .then(data => setitems(data))\r\n        }, \"sp.js\");\r\n    }, [])\r\n\r\n    console.log(getItemCountForPage)\r\n\r\n    return (\r\n        <Stack horizontal tokens={{ childrenGap: 20 }} >\r\n            <Stack.Item grow shrink styles={stackNavStyles}>\r\n                <Nav\r\n                    styles={navStyles}\r\n                    groups={navLinkGroups}\r\n                    onLinkClick={_onClickHandler}\r\n                    selectedKey={key}\r\n                />\r\n\r\n            </Stack.Item>\r\n            <Stack.Item grow={5} shrink >\r\n                <Stack tokens={{ childrenGap: 20 }}>\r\n                    <Text variant='xLarge'>Select File</Text>\r\n                    <FocusZone>\r\n                        <List\r\n                            className={classNames.listGridExample}\r\n                            items={items}\r\n                            getItemCountForPage={getItemCountForPage}\r\n                            getPageHeight={getPageHeight}\r\n                            onRenderCell={onRenderCell}\r\n                        />\r\n                    </FocusZone>\r\n                </Stack>\r\n            </Stack.Item>\r\n        </Stack>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n/* ReactDOM.render(\r\n    <FilePicker />,\r\n    document.getElementById('filepicker')\r\n)\r\n */\r\n","import { getTheme, initializeIcons, loadTheme } from 'office-ui-fabric-react';\r\n\r\n\r\nloadTheme({\r\n\tpalette: {\r\n\t\tthemePrimary: '#ff9900',\r\n\t\tthemeLighterAlt: '#fffbf5',\r\n\t\tthemeLighter: '#ffefd6',\r\n\t\tthemeLight: '#ffe0b3',\r\n\t\tthemeTertiary: '#ffc266',\r\n\t\tthemeSecondary: '#ffa51f',\r\n\t\tthemeDarkAlt: '#e68a00',\r\n\t\tthemeDark: '#c27400',\r\n\t\tthemeDarker: '#8f5600',\r\n\t\tneutralLighterAlt: '#f1f1f1',\r\n\t\tneutralLighter: '#ededed',\r\n\t\tneutralLight: '#e3e3e3',\r\n\t\tneutralQuaternaryAlt: '#d3d3d3',\r\n\t\tneutralQuaternary: '#cacaca',\r\n\t\tneutralTertiaryAlt: '#c2c2c2',\r\n\t\tneutralTertiary: '#a19f9d',\r\n\t\tneutralSecondary: '#605e5c',\r\n\t\tneutralPrimaryAlt: '#3b3a39',\r\n\t\tneutralPrimary: '#323130',\r\n\t\tneutralDark: '#201f1e',\r\n\t\tblack: '#000000',\r\n\t\twhite: '#f7f7f7',\r\n\t},\r\n});\r\n\r\ninitializeIcons('/_layouts/15/JobPortal/react/public/fluenticons/', { disableWarnings: true });\r\n\r\n\r\n\r\n","/* =============================================================\r\n Author\t\t\t:\tArtemov Aleksandr\r\n Create date\t:\t15.01.2021\r\n Description\t:\tСистемные функции\r\n =============================================================== */\r\n\r\n\r\n\r\nexport const SPServices = (function () {\r\n\r\n    var priv = { lastStatusId: undefined };\r\n    // Получаем адрес сайта\r\n    function getWebUrl() {\r\n        return (_spPageContextInfo.webServerRelativeUrl == '/') ? '' : _spPageContextInfo.webServerRelativeUrl;\r\n    }\r\n\r\n    // Получаем адрес коллекции сайта\r\n    function getSiteUrl() {\r\n        return _spPageContextInfo.siteServerRelativeUrl;\r\n    }\r\n\r\n    // Перевод объекта в строку параметров типа 'param1=value1&param2=value2'\r\n    function getStringParamsFromObject(paramsObject) {\r\n        return Object.keys(paramsObject).map(function (k) {\r\n            return encodeURI(k) + '=' + encodeURI(paramsObject[k]);\r\n        }).join('&');\r\n    }\r\n\r\n    // Формирует URL для запроса получения элементов списка через REST\r\n    function getWebApiUrlList(listUrl) {\r\n        var webUrl = getWebUrl();\r\n        return webUrl + '/_api/web/getList(\\'' + webUrl + listUrl + '\\')/items?';\r\n    }\r\n\r\n    // Проверяем что аттач это картинка\r\n    function isImage(fileName) {\r\n        return /(\\.jpg|\\.jpeg|\\.png|\\.bmp|\\.svg)$/i.test(fileName);\r\n    }\r\n\r\n    // Получение значения параметра URL'а по его имени\r\n    function getUrlParameterByName(name) {\r\n        var url = window.location.href;\r\n        name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n        var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"), results = regex.exec(url);\r\n        if (!results) {\r\n            return null\r\n        }\r\n\r\n        if (!results[2]) {\r\n            return '';\r\n        }\r\n\r\n        return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n    }\r\n\r\n    // Формирует URL для запроса получения элемента списка по ID для REST\r\n    function getListItemById(listUrl, itemId) {\r\n        var webUrl = getWebUrl();\r\n        return webUrl + '/_api/web/getList(\\'' + webUrl + listUrl + '\\')/items(' + itemId + ')';\r\n    }\r\n\r\n    // Создание элемента в списке\r\n    function createListItem(listUrl, data) {\r\n        var deferred = jQuery.Deferred();\r\n\r\n        var webUrl = getWebUrl();\r\n        fetch(webUrl + \"/_api/web/getList('\" + webUrl + listUrl + \"')/items\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': \"application/json;odata=verbose\",\r\n                'Content-Type': \"application/json;odata=verbose\",\r\n                'X-RequestDigest': jQuery(\"#__REQUESTDIGEST\").val()\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(function (response) {\r\n                return response.json();\r\n            })\r\n            .then(function (data) {\r\n                deferred.resolve(data.d);\r\n            })\r\n            .catch(function (error) {\r\n                deferred.reject(error);\r\n                console.log('Не удалась создать элемент', error);\r\n            });\r\n\r\n        return deferred.promise();\r\n    }\r\n\r\n    // Удаление элемента из списка\r\n    function deleteListItem(listUrl, itemId) {\r\n        var deferred = jQuery.Deferred();\r\n\r\n        var webUrl = getWebUrl();\r\n        fetch(webUrl + \"/_api/web/getList('\" + webUrl + listUrl + \"')/items(\" + itemId + \")\", {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': \"application/json;odata=verbose\",\r\n                'Content-Type': \"application/json;odata=verbose\",\r\n                'X-RequestDigest': jQuery(\"#__REQUESTDIGEST\").val(),\r\n                'IF-MATCH': \"*\"\r\n            }\r\n        })\r\n            .then(function (data) {\r\n                deferred.resolve(data);\r\n            })\r\n            .catch(function (error) {\r\n                deferred.reject(error);\r\n                console.log('Не удалась удалить элемент', error);\r\n            });\r\n\r\n        return deferred.promise();\r\n    }\r\n\r\n    function updateListItem(listUrl, itemId, data) {\r\n        return new Promise(function (resolve, reject) {\r\n            var webUrl = getWebUrl();\r\n\r\n            fetch(webUrl + \"/_api/web/getList('\" + webUrl + listUrl + \"')/items(\" + itemId + \")\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Accept': \"application/json;odata=verbose\",\r\n                    'Content-Type': \"application/json;odata=verbose\",\r\n                    'X-RequestDigest': jQuery(\"#__REQUESTDIGEST\").val(),\r\n                    'IF-MATCH': \"*\",\r\n                    'X-Http-Method': \"MERGE\"\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(function (response) {\r\n                    resolve(response);\r\n                })\r\n                .catch(function (error) {\r\n                    reject(error);\r\n                    console.log('Не удалась обновить элемент');\r\n                });\r\n        });\r\n    }\r\n\r\n\r\n    function getJsomListItems(webUrl, listTitle, camlQuery, params, pagingInfo) {\r\n        // Возращаем promise чтобы снабдить функцию функционалом обещаний\r\n        return new Promise(function (resolve, reject) {        \r\n                var context = SP.ClientContext.get_current();;//new SP.ClientContext(webUrl); TODO: не открывать контекст, если подходит текущий\r\n                var list = context.get_web().get_lists().getByTitle(listTitle);\r\n                var query = new SP.CamlQuery();\r\n                query.set_viewXml(camlQuery);\r\n\r\n                if (pagingInfo) {\r\n                    var position = new SP.ListItemCollectionPosition();\r\n                    position.set_pagingInfo(pagingInfo);\r\n                    query.set_listItemCollectionPosition(position);\r\n                }\r\n\r\n                var listItems = list.getItems(query);\r\n                if (params) {\r\n                    context.load(listItems, params);\r\n                } else {\r\n                    context.load(listItems);\r\n                }\r\n\r\n                context.executeQueryAsync(function () {\r\n                    // var items = [];\r\n                    var enumerator = listItems.getEnumerator();\r\n\r\n                    var promises = [];\r\n                    while (enumerator.moveNext()) {\r\n                        var item = enumerator.get_current().get_fieldValues();\r\n                        jQuery.extend(item, { AttachmentFiles: [] });\r\n\r\n                        var promise = checkAttachments(context, enumerator, item);\r\n                        promises.push(promise);\r\n                    }\r\n\r\n                    Promise.all(promises)\r\n                        .then(function (data) {\r\n                            resolve(data);\r\n                        });\r\n\r\n                }, function (sender, error) {\r\n                    reject(error.get_message(), error.get_stackTrace());\r\n                });\r\n            });       \r\n    }\r\n\r\n    function checkAttachments(context, enumerator, item) {\r\n        return new Promise(function (resolve) {\r\n            if (item.Attachments) {\r\n                var attachmentFiles = enumerator.get_current().get_attachmentFiles();\r\n                getAttachments(context, attachmentFiles, item)\r\n                    .then(function (data) {\r\n                        resolve(data);\r\n                    });\r\n            } else {\r\n                resolve(item);\r\n            }\r\n        });\r\n    }\r\n\r\n    function getAttachments(context, attachmentFiles, item) {\r\n        return new Promise(function (resolve, reject) {\r\n            context.load(attachmentFiles);\r\n            context.executeQueryAsync(function () {\r\n                var attachmentsItemsEnumerator = attachmentFiles.getEnumerator();\r\n                while (attachmentsItemsEnumerator.moveNext()) {\r\n                    var attachItem = attachmentsItemsEnumerator.get_current();\r\n\r\n                    item.AttachmentFiles.push({\r\n                        FileName: attachItem.get_fileName(),\r\n                        ServerRelativeUrl: attachItem.get_serverRelativeUrl()\r\n                    });\r\n                }\r\n\r\n                resolve(item);\r\n            }, function (sender, error) {\r\n                reject(error.get_message(), error.get_stackTrace());\r\n            });\r\n        });\r\n    }\r\n\r\n    // Определить, состоит ли текущий пользователь в указанных группах\r\n    function isUserInGroups(userGroups) {\r\n        // Возращаем promise чтобы снабдить функцию функционалом обещаний\r\n        return new Promise(function (resolve) {\r\n\r\n            if (userGroups === undefined) {\r\n                userGroups = [];\r\n            }\r\n\r\n            // Добавляем по умолчанию группу системных администраторов\r\n            // userGroups.push(SLSystemConstants.SYSTEM_ADMINISTRATOR_GROUP);\r\n\r\n            var url = getWebUrl() + '/_api/web/currentuser/groups';\r\n\r\n            fetch(url, {\r\n                headers: {\r\n                    'Accept': \"application/json;odata=verbose\",\r\n                    'Content-Type': \"application/json;odata=verbose\",\r\n                }\r\n            })\r\n                .then(function (response) {\r\n                    return response.json();\r\n                })\r\n                .then(function (response) {\r\n                    response.d.results.map(function (item) {\r\n                        if (userGroups.indexOf(item.Title) != -1) {\r\n                            resolve(true);\r\n                        }\r\n                    });\r\n                    resolve(false);\r\n                })\r\n                .catch(function (error) {\r\n                    console.log('Ошибка при проверке групп пользователя', error);\r\n                });\r\n        });\r\n    }\r\n\r\n\r\n    function addNotification(text, fixed) {\r\n        if (SP.UI.Notify) {\r\n            if (priv.lastStatusId)\r\n                SP.UI.Status.removeStatus(priv.lastStatusId);\r\n            priv.lastStatusId = SP.UI.Notify.addNotification(text, fixed == true);\r\n        }\r\n        //SP.UI.Status.addStatus(\"Status good!\") SP.UI.Status.setStatusPriColor(statusId, 'red');     SP.UI.Status.removeStatus(statusId);\r\n    }\r\n\r\n    // Если это документ, то откроем в отдельной закладке и в owa\r\n    function getLink(link) {\r\n        if (link) {\r\n            var linkUrl = link.Url ? link.Url : link;\r\n            if (linkUrl.search(/\\.pdf$|\\.doc$|\\.xls$|\\.ppt$|\\.docx$|\\.xlsx$|\\.pptx$/ig) !== -1) {\r\n                return linkUrl.split('?')[0] + '?Web=1';\r\n            } else {\r\n                return linkUrl;\r\n            }\r\n        }\r\n\r\n        return '#';\r\n    }\r\n\r\n    // Если это документ, то откроем в отдельной закладке\r\n    function getTarget(link) {\r\n        if (getLink(link).search(/Web=1$/ig) !== -1) {\r\n            return '_blank';\r\n        }\r\n        else\r\n            return '_self';\r\n    }\r\n\r\n    function getHashTagLink(hashTagId) {\r\n        return getWebUrl() + '/SitePages/search.aspx?#q=&advanced=1&hashtags=' + hashTagId;\r\n    }\r\n\r\n    /**\r\n     * http://stackoverflow.com/questions/2353211/hsl-to-rgb-color-conversion\r\n     *\r\n     * Converts an HSL color value to RGB. Conversion formula\r\n     * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n     * Assumes h, s, and l are contained in the set [0, 1] and\r\n     * returns r, g, and b in the set [0, 255].\r\n     *\r\n     * @param   Number  h       The hue\r\n     * @param   Number  s       The saturation\r\n     * @param   Number  l       The lightness\r\n     * @return  Array           The RGB representation\r\n     */\r\n    function hslToRgb(h, s, l) {\r\n        var r, g, b;\r\n\r\n        if (s == 0) {\r\n            r = g = b = l; // achromatic\r\n        } else {\r\n            function hue2rgb(p, q, t) {\r\n                if (t < 0) t += 1;\r\n                if (t > 1) t -= 1;\r\n                if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n                if (t < 1 / 2) return q;\r\n                if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n                return p;\r\n            }\r\n\r\n            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n            var p = 2 * l - q;\r\n            r = hue2rgb(p, q, h + 1 / 3);\r\n            g = hue2rgb(p, q, h);\r\n            b = hue2rgb(p, q, h - 1 / 3);\r\n        }\r\n\r\n        return [Math.floor(r * 255), Math.floor(g * 255), Math.floor(b * 255)];\r\n    }\r\n\r\n    // Делаю свою функцию setCookie (копия из docflow), т.к. в функции в docflow ошибка, из-за которой нельзя указать szPath\r\n    function setCookie(szName, szValue, uDaysExpires, szPath) {\r\n        var dtExpires = new Date();\r\n        var szExpireDate = '';\r\n\r\n        if (szPath == '') szPath = \"/\";\r\n\r\n        dtExpires.setTime(dtExpires.getTime() + uDaysExpires * 24 * 60 * 60 * 1000);\r\n        szExpireDate = dtExpires.toGMTString();\r\n        szValue = encodeURI(szValue);\r\n        document.cookie = szName + '=' + szValue + '; path=' + szPath + '; expires=' + szExpireDate;\r\n    }\r\n\r\n    // возвращает cookie с именем name, если есть, если нет, то undefined\r\n    function getCookie(name) {\r\n        var matches = document.cookie.match(new RegExp(\r\n            \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\r\n        ));\r\n        return matches ? decodeURIComponent(matches[1]) : undefined;\r\n    }\r\n\r\n    // Создание элемента в списке\r\n    function getSetting(name, callback) {\r\n        var deferred = jQuery.Deferred();\r\n\r\n        SP.SOD.executeFunc('sp.js', 'SP.ClientContext', () => {\r\n            SPServices.getJsomListItems(\"\", \"Настройки\", \"<View Scope='Recursive'><Query></Query></View>\")\r\n                .then(items => {\r\n\r\n                    var item = items.filter(item => item.Title === name);\r\n                    if (item.length == 1)\r\n                        callback(item[0].SettingsValue);\r\n\r\n                })\r\n                .catch(error =>\r\n                    console.log('Не удалось получить данные из списка Настройки для ' + name + \" \" + error)\r\n                );\r\n        });\r\n    }\r\n\r\n    function isInEditMode() {\r\n\r\n        var inDesignMode = document.forms[MSOWebPartPageFormName].MSOLayout_InDesignMode;\r\n        inDesignMode = inDesignMode == undefined ? null : document.forms[MSOWebPartPageFormName].MSOLayout_InDesignMode.value;\r\n        if (inDesignMode == \"1\") { return true; }\r\n        var wikiInEditMode = document.forms[MSOWebPartPageFormName]._wikiPageMode;\r\n        wikiInEditMode = wikiInEditMode == undefined ? null : document.forms[MSOWebPartPageFormName]._wikiPageMode.value;\r\n        if (wikiInEditMode == \"Edit\") { return true; }\r\n        else { return false; }\r\n    }\r\n\r\n    function OpenModalDialog(strPageURL, width, height) {\r\n        var dialogOptions = SP.UI.$create_DialogOptions();\r\n        dialogOptions.url = strPageURL; // URL of the Page               \r\n        // Width of the Dialog  \r\n        dialogOptions.width = width;\r\n        // Height of the Dialog  \r\n        dialogOptions.height = height;\r\n        // Function to capture dialog closed event  \r\n        //dialogReturnValueCallback - A function pointer that specifies the return callback function. The function takes two parameters, a dialogResult of type SP.UI.DialogResult Enumeration and a returnValue of type object that contains any data returned by the dialog.  \r\n        //dialogOptions.dialogReturnValueCallback = Function.createDelegate(null, CloseCallback);  \r\n        // Open the Dialog  \r\n        SP.UI.ModalDialog.showModalDialog(dialogOptions);\r\n        return false;\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    return {\r\n        getWebUrl: getWebUrl,\r\n        getSiteUrl: getSiteUrl,\r\n        getStringParamsFromObject: getStringParamsFromObject,\r\n        getWebApiUrlList: getWebApiUrlList,\r\n        isImage: isImage,\r\n        getUrlParameterByName: getUrlParameterByName,\r\n        getListItemById: getListItemById,\r\n        createListItem: createListItem,\r\n        deleteListItem: deleteListItem,\r\n        updateListItem: updateListItem,\r\n        getJsomListItems: getJsomListItems,\r\n        isUserInGroups: isUserInGroups,\r\n        addNotification: addNotification,\r\n        getLink: getLink,\r\n        getTarget: getTarget,\r\n        getHashTagLink: getHashTagLink,\r\n        hslToRgb: hslToRgb,\r\n        setCookie: setCookie,\r\n        getCookie: getCookie,\r\n        getSetting: getSetting,\r\n        isInEditMode: isInEditMode,\r\n        OpenModalDialog: OpenModalDialog\r\n    }\r\n}());\r\n\r\n\r\n"],"sourceRoot":""}